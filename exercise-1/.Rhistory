install.packages("devtools")
# Install "fueleconomy" dataset from GitHub
devtools::install_github("hadley/fueleconomy")
# Use the `libary()` function to load the "fueleconomy" package
library(fueleconomy)
View(vehicles)
makes <- vehicles$make
makes
unique_makes <- unique(makes)
unique_makes
length(unique_makes)
1997_car <- vehicles[vehicles$year == 19997,]
1997car <- vehicles[vehicles$year == 19997,]
filter <- vehicles[vehicles$year == 19997,]
filter
filter <- vehicles[vehicles$year == 1997,]
filter
order(vehicles$hwy)
order <- filter[order(vehicles$hwy), ]
vehicles$average <- (vehicles$hwy + vehicles$cty) / 2
View(vehicles)
two_wheel_20_mpg <- vehicles[vehicles$drive == '2-Wheel Drive' & vehicles$cty > 20, ]
# Exercise 1: working with data frames (review)
# Install devtools package: allows installations from GitHub
install.packages("devtools")
# Install "fueleconomy" dataset from GitHub
devtools::install_github("hadley/fueleconomy")
# Use the `libary()` function to load the "fueleconomy" package
library(fueleconomy)
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(vehicles)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
makes <- vehicles$make
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
unique_makes <- unique(makes)
length(unique_makes)
# Filter the data set for vehicles manufactured in 1997
filter <- vehicles[vehicles$year == 1997,]
# Arrange the 1997 cars by highway (`hwy`) gas milage
# Hint: use the `order()` function to get a vector of indices in order by value
# See also:
# https://www.r-bloggers.com/r-sorting-a-data-frame-by-the-contents-of-a-column/
order <- filter[order(vehicles$hwy), ]
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
vehicles$average <- (vehicles$hwy + vehicles$cty) / 2
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
two_wheel_20_mpg <- vehicles[vehicles$drive == '2-Wheel Drive' & vehicles$cty > 20, ]
# Of the above vehicles, what is the vehicle ID of the vehicle with the worst
# hwy mpg?
# Hint: filter for the worst vehicle, then select its ID.
# Write a function that takes a `year_choice` and a `make_choice` as parameters,
# and returns the vehicle model that gets the most hwy miles/gallon of vehicles
# of that make in that year.
# You'll need to filter more (and do some selecting)!
# What was the most efficient Honda model of 1995?
vehicles$average <- (vehicles$hwy + vehicles$cty) / 2
min(two_wheel_20_mpg$hwy)
two_whheel_20_mpg$hwy == min(two_wheel_20_mpg$hwy)
two_wheel_20_mpg$hwy == min(two_wheel_20_mpg$hwy)
worst_hwy <- vehicles$id[two_wheel_20_mpg$hwy == min(two_wheel_20_mpg$hwy)]
worst_hwy
library(fueleconomy)
install.packages("dplyr")
library(dplyr)
makes <- select(fueleconomy, make)
library(fueleconomy)
makes <- select(fueleconomy, make)
makes <- select(vehicles, make)
distinct(vehicles, make)
1997cars <- select(vehicles, year = 1997)
cars <- filter(vehicles, year == 1997)
cars_in_1997 <- filter(vehicles, year == 1997)
arrange(cars_in_1997, hwy)
View(vehicles)
